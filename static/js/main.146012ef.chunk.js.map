{"version":3,"sources":["index.js"],"names":["player1","prompt","player2","rank1","rank2","Square","props","className","onClick","value","Score","React","Component","Board","i","this","squares","renderSquare","Game","state","Array","fill","xIsNext","slice","calculateWinner","setState","winname","alert","winner","nobody","lines","hod","length","a","b","c","calculateNobody","result","zanovo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.146012ef.chunk.js","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar player1 = prompt('Игрок1');\nvar player2 = prompt('Игрок2');\nlet rank1 =  0;\nlet rank2 =  0;\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Score extends React.Component {\n  render() {\n    \n    return (\n      <table>Score\n          <tr>\n            <td>{player1}:</td>\n            <td>{rank1}</td>\n          </tr>\n          <tr>\n            <td>{player2}:</td>\n            <td>{rank2}</td>\n          </tr>\n      </table>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  \n\n\n  renderSquare(i) {\n    return (\n      <Square\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  \n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n    \n  }\n}\n\nclass Game extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  zanovo() {\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i,props) {\n    const squares = this.state.squares.slice();\n    \n    if (calculateWinner(squares) || squares[i]) {\n      \n      return;\n  }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n\n  result(winname) {\n    if (winname == player1) {\n       rank1++; \n     } else if (winname == player2) { \n       rank2++;\n     } else {\n       alert(\"none\");\n     }\n   } \n   \n\n  render() {\n\n  const winner = calculateWinner(this.state.squares);\n  const nobody = calculateNobody(this.state.squares);\n  \n  if (winner) {\n    let winname = this.state.xIsNext ? player2 : player1;\n    this.result(winname);\n    alert(`Winner: ${winname}`); \n    this.zanovo();\n  }\n\n  if (nobody) {\n    alert(\"ничья\");\n    this.zanovo();\n    \n  }\n  \n  \n\n    return (\n      \n      <div className=\"game\">\n        \n        <div className=\"game-board\">\n        <Board\n           squares={this.state.squares}\n           onClick={(i) => this.handleClick(i)}\n          />\n        <div className=\"line1\"></div>\n        <div className=\"line2\"></div>\n        <div className=\"line3\"></div>\n        <div className=\"line4\"></div>\n        </div>\n        <div className=\"game-score\">\n          <Score />\n        </div>\n        \n      </div>\n    );\n  }\n }\n\n\n\n\n\n  \n\n  \n\n  function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n     \n      return squares[a]\n    }\n  }\n  return null;\n}\n\nfunction calculateNobody(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  let hod = 0;\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    \n    if ((squares[a] == \"X\" || squares[b] == \"X\" || squares[c] == \"X\") && (squares[a] == \"O\" || squares[b] == \"O\" || squares[c] == \"O\")) {\n     hod++;\n    }\n    \n    if (hod == 8) {\n      return squares[a]\n    }\n  }\n  return null;\n}\n\n// ========================================\nReactDOM.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}